MAIN CODE ON MICROPROCESSOR
---------------------------------------------------------------------------------------
Set up acces point
WHILE True
	IF client connected
		READ wifi input
		Decode wifi input
		IF wifi input indicates sensor mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed) in another thread (or with interrupts)
			k1, k2 = Decode corrector coefficients from wifi input
			WHILE no bytes on buffer 
				readValue = READ analog channel
				angleValue = readvalue*k1+k2
				SEND angleValue
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates calibration mode
			Decode RPM part of wifi input
			Start PID flywheel speed control in another thread (or with interrupts)
			sensorValue=READ MEMS sensor
			readValue = READ analog channel
			SEND sensorValue and readValue
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates actuation mode
			Decode RPM part of wifi input
			Start PID flywheel speed control in another thread (or with interrupts)
			Decode servo speed part of wifi input
			IF servo speed part is NOT null
				servoPos=63
				WHILE servoPos <117
					drive servo to servoPos degrees
					WAIT servoSpeed*tServo seconds.
					servoPos += 1
			drive servo to 90 degrees with slow speed
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates stabilisation mode
			Decode RPM part of wifi input
			Start PID flywheel speed control in another thread (or with interrupts)
			Decode corrector coefficients from wifi input
			WHILE no bytes on buffer 
					readValue = READ analog channel
					angleValue = readValue*k1+k2
					stepPos = calculate PID step motor output using angleValue
					
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupts)
---------------------------------------------------------------------------------------
END OF MAIN CODE ON MICROPROCESSOR


flywheelSpeedControl(RPM) FUNCTION
---------------------------------------------------------------------------------------
attach interrupt to Hall Effect sensor pin
	each time that pin READs HIGH, c+=1
set time interrupt
	every t seconds
		curSpeed=c*t/10
WRITE driver enable pin to HIGH
WHILE True
	pwmSignal=PIDControl(RPM, curSpeed)
	WRITE pwmSignal on driver pin
	
	
	  //PID program
   if (motor_start){
     e_speed = set_speed - pv_speed;
     pwm_pulse = e_speed*kp + e_speed_sum*ki + (e_speed - e_speed_pre)*kd;
     e_speed_pre = e_speed;  //save last (previous) error
     e_speed_sum += e_speed; //sum of error
     if (e_speed_sum >4000) e_speed_sum = 4000;
     if (e_speed_sum <-4000) e_speed_sum = -4000;
   }
---------------------------------------------------------------------------------------
END OF flywheelSpeedControl(RPM) FUNCTION