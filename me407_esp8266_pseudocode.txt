MAIN CODE ON MICROPROCESSOR
---------------------------------------------------------------------------------------
Set up acces point
WHILE True
	IF client connected
		Lock stepper motor (move one step with stepper library)
		READ wifi input
		Decode wifi input
		IF wifi input indicates sensor mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed) in another thread (or with interrupts)
			k1, k2 = Decode corrector coefficients from wifi input
			WHILE no bytes on buffer 
				readValue = READ analog channel
				angleValue = readvalue*k1+k2
				SEND angleValue
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates calibration mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed) in another thread (or with interrupts)
			sensorValue=READ MEMS sensor
			readValue = READ analog channel
			SEND sensorValue and readValue
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates actuation mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed) in another thread (or with interrupts)
			Decode servo speed part of wifi input
			IF servo speed part is NOT null
				servoPos=63
				WHILE servoPos <117
					drive servo to servoPos degrees
					WAIT servoSpeed*tServo seconds.
					servoPos += 1
			drive servo to 90 degrees with slow speed
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupt)
		ELSE IF wifi input indicates stabilisation mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed) in another thread (or with interrupts)
			Decode corrector coefficients from wifi input
			WHILE no bytes on buffer 
					readValue = READ analog channel
					angleValue = readValue*k1+k2
					stepPos = calculate PID step motor output using angleValue
					
			WRITE LOW on digital pin connected to motor driver enable pin
			Kill flywheel thread (or detach interrupts)
---------------------------------------------------------------------------------------
END OF MAIN CODE ON MICROPROCESSOR


flywheelSpeedControl(wantedSpeed) FUNCTION
---------------------------------------------------------------------------------------
attach interrupt to Hall Effect sensor pin
	each time that pin READs HIGH
		c+=1
WRITE driver enable pin to HIGH
PWM = 0
errorSpeedSum = 0
attach time interrupt
	every t seconds
		curSpeed = c * 60 / (magnetNumber * t)
		errorSpeed =  wantedSpeed - curSpeed;
		PWM = errorSpeed*kp + errorSpeedSum*ki + (errorSpeed - errorSpeedPre)*kd;
		errorSpeedPre = errorSpeed
		errorSpeedSum += errorSpeed
		IF errorSpeedSum >4000
			errorSpeedSum = 4000
		IF errorSpeedSum <-4000
			errorSpeedSum = -4000
		IF PWM > 255
			PWM = 255
		WRITE PWM on DC motor driver pin
		c = 0

---------------------------------------------------------------------------------------
END OF flywheelSpeedControl(wantedSpeed) FUNCTION
