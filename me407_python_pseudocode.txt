MAIN CODE ON PYTHON GUI
---------------------------------------------------------------------------------------
Initialize GUI
WHILE True
	WHILE connected to server
		IF sensor button is pressed
			threadKiller()
			IF values in RPM and coefficient textboxes are in acceptable intervals
				encode and send sensor flywheel speed and coefficients to server
				START sensorThread
					killSensor = False
					WHILE NOT killSensor
						receive sensor data from server
						calculatedTorque = calculateTorque(RPM, sensorData)
						log sensor data and calculatedTorque
						show calculatedTorque
					plot sensor data and calculatedTorque
					BREAK the loop
					
			ELSE
				set Warning textbox to "Missing/Incorrect Information"
				BREAK the loop
		IF wifi input indicates calibration mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed)
			sensorValue=READ MEMS sensor
			readValue = READ analog channel
			SEND sensorValue and readValue
			WRITE LOW on digital pin connected to motor driver enable pin
			Detach flywheel interrupts
		IF wifi input indicates actuation mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed)
			Decode servo speed part of wifi input
			IF servo speed part is NOT null
				servoPos=63
				WHILE servoPos <117
					drive servo to servoPos degrees
					WAIT servoSpeed*tServo seconds.
					servoPos += 1
			drive servo to 90 degrees with slow speed
			WRITE LOW on digital pin connected to motor driver enable pin
			Detach flywheel interrupts
		IF wifi input indicates stabilisation mode
			flyWheelSpeed = Decode RPM part of wifi input
			flywheelSpeedControl(flyWheelSpeed)
			Decode corrector coefficients from wifi input
			stepperInterrupSet = False
			WHILE no bytes on buffer 
				readValue = READ analog channel
				angleValue = readValue*k1+k2
				stepPositionControl(angleValue)
			WRITE LOW on digital pin connected to motor driver enable pin
			Detach flywheel and stepper interrupts
			Lock stepper motor (move one step with stepper library)
---------------------------------------------------------------------------------------
END OF MAIN CODE ON PYTHON GUI

threadKiller() FUNCTION
---------------------------------------------------------------------------------------
IF sensorThread exists
	killSensor = True
IF calibrationThread exists
	killCalibration = True
IF actuatorThread exists
	killActuator = True
IF stabilisationThread exists
	killStabilisattion = True


---------------------------------------------------------------------------------------
END OF threadKiller() FUNCTION
